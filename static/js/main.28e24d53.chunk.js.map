{"version":3,"sources":["Redux/users-reducer.js","component/Profile/SmallAvatar/SmallAvatar.module.css","assets/image/preloader.svg","api/api.js","serviceWorker.js","component/Aside/AsideLinks/AsideLinks.jsx","component/ListsFriend/ListsFriend.jsx","component/Aside/Aside.jsx","component/Feed/Feed.jsx","component/Friend/Friend.jsx","utils/validator/validator.js","component/LoginForm/LoginForm.js","Redux/auth-reducer.js","component/Login/Login.js","component/Header/Header.jsx","component/Header/HeaderContainer.js","component/Training/Forms.js","Redux/app-reducer.js","hoc/withSuspense.js","App.js","Redux/aside-reducer.js","Redux/redux-store.js","index.js","utils/selectors/selectors.js","component/LoginForm/LoginForm.module.css","common/FormsControls/FormsControls.module.css","hoc/withAuthRedirect.js","Redux/profile-reducer.js","common/Preloader/Preloader.js","component/ListsFriend/ListsFriend.module.css","common/FormsControls/FormsControls.js","component/Aside/AsideLinks/AsideLinks.module.css","component/Aside/Aside.module.css","component/Header/Header.module.css","component/Profile/SmallAvatar/SmallAvatar.jsx","Redux/messages-reducer.js"],"names":["SET_USERS","SET_PAGE","TOGGLE_PRELOADER","TOGGLE_FOLLOWED","ADD_USER_STACK","REMOVE_USER_STACK","initialState","pageSize","currentPage","totalCount","preloader","usersInSubscribeProcess","count","setUsers","dataFromApi","type","togglePreloader","bool","toggleFollowed","userId","addUserToSubscribeStack","removeUserToSubscribeStack","getUsers","countUsers","dispatch","a","usersApi","response","data","changeCurrentPage","newPageNumber","followOnUser","unFollowOnUser","usersReducer","state","action","items","map","u","id","followed","filter","e","module","exports","instance","axios","withCredentials","baseURL","headers","get","post","delete","authApi","getAuthState","loginTheSite","formData","email","password","rememberMe","captcha","logOutTheSite","requestCaptcha","profileApi","getProfilePeople","getUserStatus","updateUserStatus","status","put","savePhotoToServer","photoFile","FormData","append","sendEditProfileSettings","lookingForAJob","lookingForAJobDescription","AboutMe","aboutMe","fullName","github","vk","facebook","instagram","twitter","website","youtube","mainLink","contacts","Boolean","window","location","hostname","match","AsideLinks","props","url","iconClass","icon","linkText","text","className","style","item","to","itemLink","ListsFriend","result","show","forEach","elem","index","push","String","key","SmallAvatar","src","renderFriendsList","listWrap","listHead","listImageWrap","Aside","renderAsideLinks","this","links","asideSection","menu","friends","React","Component","compose","withAuthRedirect","connect","getFilterSidebarLinks","getSidebarFriends","Friend","min","required","value","undefined","test","minLength5","length","LoginForm","isAuth","handleSubmit","error","captchaUrl","LoginFormComponent","s","loginForm","onSubmit","Field","name","placeholder","component","Input","validate","htmlFor","remember","alt","commonError","authPage","reduxForm","form","TOGGLE_AUTH","SET_USER_DATA","SET_DEFAULT_STATE","SET_CAPTCHA_URL","toggleAuthState","getAuthStateUser","resultCode","setUserIdAC","stateFromApi","authReducer","Login","console","log","loginTheSiteThunkCallback","Preloader","captchaURL","message","messages","stopSubmit","_error","Header","headerSection","href","login","onClick","logOut","HeaderContainer","logoutTheSiteCallback","Final","initialize","appReducer","withSuspense","Suspense","fallback","ContainerUsers","lazy","ContainerProfile","ContainerDialogs","App","getInitializeStateThunkCallback","path","render","getInitializeSelector","getAuthPageSelector","initializePromise","Promise","all","then","asideReducer","reducers","combineReducers","dialogsPage","messageReducer","profilePage","profileReducer","sidebar","usersPage","app","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","getUsersPageSelector","createSelector","l","getDialogsPage","RedirectComponent","ADD_USER_POST","SET_DISPLAYED_USER","IS_MY_PAGE","SET_USER_STATUS","DELETE_POST","SAVE_PHOTO","SET_USER_ID","SET_PROFILE_FORM_RESULT","posts","likeCount","currentUser","photos","small","large","myId","isMyPage","hasProfileFormError","setDisplayedCurrentUser","userDataFromApi","isMyPageAC","setUserStatus","addNewPostThuhnkCallback","textNewPost","addNewPostCreateAction","getProfilePageThunkCallback","getUserStatusThunkCallback","savePhotoThunkCallback","updateUserStatusThunkCallback","statusText","handleProfileEditFormThunkCallback","getState","reject","postId","defaultPreloader","TagName","createElement","input","meta","hasError","touched","formControl","Textarea","user__avatar","UPDATE_MESSAGE_TEXTAREA","ADD_NEW_MESSAGE","chatTextarea","failCount","updateMessageTextareaCreateAction","newValue","addNewMessageCreateAction"],"mappings":"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","file":"static/js/main.28e24d53.chunk.js","sourcesContent":["import {usersApi} from '../api/api';\r\n\r\nconst SET_USERS = 'samurai-network/users-reducer/SET_USERS';\r\nconst SET_PAGE = 'samurai-network/users-reducer/SET_PAGE';\r\nconst TOGGLE_PRELOADER = 'samurai-network/users-reducer/TOGGLE_PRELOADER';\r\nconst TOGGLE_FOLLOWED = 'samurai-network/users-reducer/TOGGLE_FOLLOWED';\r\nconst ADD_USER_STACK = 'samurai-network/users-reducer/ADD_USER_STACK';\r\nconst REMOVE_USER_STACK = 'samurai-network/users-reducer/REMOVE_USER_STACK';\r\n\r\nlet initialState = {\r\n    pageSize: 10, //Пользователей на странице\r\n    currentPage: 1, //Текущая страница\r\n    totalCount: null, //Всего пользователей,\r\n    preloader: false, //Прелоадер при false не показывается\r\n    usersInSubscribeProcess: [],\r\n    count: 0,\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                items: action.dataFromApi.items,\r\n                totalCount: action.dataFromApi.totalCount\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                preloader: action.bool\r\n            }\r\n        case TOGGLE_FOLLOWED:\r\n            return {\r\n                ...state,\r\n                items: state.items.map(u => {\r\n                    if(action.userId === u.id) {\r\n                        return {...u, followed: action.bool}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case ADD_USER_STACK:\r\n            return {\r\n                ...state,\r\n                usersInSubscribeProcess: [action.userId, ...state.usersInSubscribeProcess]\r\n            }\r\n        case REMOVE_USER_STACK:\r\n            return {\r\n                ...state,\r\n                usersInSubscribeProcess: state.usersInSubscribeProcess.filter(e => e !== action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreator\r\nconst setUsers = (dataFromApi) => ({type: SET_USERS, dataFromApi});\r\nconst setPage = (currentPage) => ({type: SET_PAGE, currentPage});\r\nconst togglePreloader = (bool) => ({type: TOGGLE_PRELOADER, bool});\r\nconst toggleFollowed = (userId, bool) => ({type: TOGGLE_FOLLOWED, userId, bool});\r\nexport const addUserToSubscribeStack = (userId) => ({type: ADD_USER_STACK, userId});\r\nconst removeUserToSubscribeStack = (userId) => ({type: REMOVE_USER_STACK, userId});\r\n//Thunks\r\nexport const getUsers = (currentPage, countUsers) => async (dispatch) => {\r\n    const response = await usersApi.getUsers(currentPage, countUsers);\r\n    dispatch(setUsers(response.data));\r\n    dispatch(togglePreloader(true));\r\n}\r\nexport const changeCurrentPage = (newPageNumber) => async (dispatch) => {\r\n    dispatch(setPage(newPageNumber));\r\n    dispatch(togglePreloader(false));\r\n\r\n    const response = await usersApi.getUsers(newPageNumber)\r\n    dispatch(setUsers(response.data));\r\n    dispatch(togglePreloader(true));\r\n}\r\nexport const followOnUser = (userId) => async (dispatch) => {\r\n    dispatch(addUserToSubscribeStack(userId));\r\n    const response = await usersApi.followOnUser(userId)\r\n\r\n    dispatch(toggleFollowed(userId,true));\r\n    dispatch(removeUserToSubscribeStack(userId));\r\n}\r\nexport const unFollowOnUser = (userId) => async (dispatch) => {\r\n    dispatch(addUserToSubscribeStack(userId));\r\n    const response = await usersApi.unFollowOnUser(userId)\r\n\r\n    dispatch(toggleFollowed(userId,false));\r\n    dispatch(removeUserToSubscribeStack(userId));\r\n}\r\n\r\nexport default usersReducer;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user__avatar\":\"SmallAvatar_user__avatar__29dZI\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.078ba709.svg\";","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '718dc875-a290-4b03-a341-95d2eb3ffe02'\r\n    }\r\n});\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPage = 1, countUsers = 7) {\r\n        return instance.get(`/users?count=${countUsers}&page=${currentPage}`)\r\n    },\r\n    followOnUser(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unFollowOnUser(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    }\r\n}\r\n\r\nexport const authApi = {\r\n    getAuthState() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    loginTheSite(formData) {\r\n        let {email, password, rememberMe, captcha} = formData;\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logOutTheSite() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n    requestCaptcha() {\r\n        return instance.get(`security/get-captcha-url`);\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfilePeople(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId = 6722) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {status})\r\n    },\r\n    savePhotoToServer(photoFile) {\r\n        let formData = new FormData();\r\n        formData.append(\"image\", photoFile);\r\n        return instance.put(`profile/photo`, formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n    },\r\n    sendEditProfileSettings(formData) {\r\n        let {\r\n            userId = 6722,\r\n            lookingForAJob,\r\n            lookingForAJobDescription,\r\n            aboutMe: AboutMe,\r\n            fullName,\r\n            github,\r\n            vk,\r\n            facebook,\r\n            instagram,\r\n            twitter,\r\n            website,\r\n            youtube,\r\n            mainLink\r\n        } = formData;\r\n\r\n        return instance.put(`profile`, {\r\n            userId,\r\n            lookingForAJob,\r\n            lookingForAJobDescription,\r\n            fullName,\r\n            AboutMe,\r\n            contacts: {\r\n                github, vk, facebook, instagram, twitter, website, youtube, mainLink\r\n            }\r\n        })\r\n    }\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport style from './AsideLinks.module.css';\r\n\r\nconst AsideLinks = (props) => {\r\n    let url = props.url,\r\n        iconClass = `fa ${props.icon}`,\r\n        linkText = props.text;\r\n    return (\r\n        <li className={style.item}>\r\n            <NavLink to={url} className={style.itemLink}>\r\n                <i className={iconClass}></i>\r\n                {linkText}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n};\r\n\r\n\r\nexport default AsideLinks;","import React from 'react';\r\nimport style from './ListsFriend.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport SmallAvatar from \"../Profile/SmallAvatar/SmallAvatar\";\r\n\r\nconst ListsFriend = (props) => {\r\n\r\n    function renderFriendsList(state, show) {\r\n        let result = [];\r\n        state.forEach((elem, index) => {\r\n            if (index <= show - 1) result.push(<NavLink to={String(elem.userId)} key={index}><SmallAvatar src={elem.src}/></NavLink>);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    let result = renderFriendsList(props.state, props.show);\r\n\r\n    return (\r\n        <div className={style.listWrap}>\r\n            <h4 className={style.listHead}>Friends</h4>\r\n            <div className={style.listImageWrap}>\r\n                {result}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ListsFriend;","import React from 'react';\r\nimport AsideLinks from './AsideLinks/AsideLinks';\r\nimport style from './Aside.module.css';\r\nimport ListsFriend from \"../ListsFriend/ListsFriend\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getFilterSidebarLinks, getSidebarFriends} from \"../../utils/selectors/selectors\";\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        links: getFilterSidebarLinks(state),\r\n        friends: getSidebarFriends(state),\r\n    }\r\n}\r\n\r\nclass Aside extends React.Component {\r\n    render() {\r\n        let renderAsideLinks = this.props.links.map((elem, index) => {\r\n            return <AsideLinks key={index} url={elem.url} icon={elem.icon} text={elem.text}/>;\r\n        });\r\n\r\n        return (\r\n            <aside className={style.asideSection}>\r\n                <nav>\r\n                    <ul className={style.menu}>\r\n                        {renderAsideLinks}\r\n                    </ul>\r\n                </nav>\r\n                <ListsFriend show='3' state={this.props.friends}/>\r\n            </aside>\r\n        )\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, {})\r\n)(Aside)","import React from 'react';\r\nimport style from './Feed.module.css';\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst Feed = (props) => {\r\n    return(\r\n        <div className={`default-card`}>\r\n            Feed\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withAuthRedirect(Feed);","import React from 'react';\r\nimport style from './Friend.module.css';\r\n\r\nfunction Friend() {\r\n    return(\r\n        <div className={`default-card`}>\r\n            Friend\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","//data checking && validatorFunctions\r\nexport const required               = value => (value || typeof value === 'number' ? undefined : 'Required');\r\nexport const email                  = value => {\r\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) return 'Invalid email address';\r\n    else return undefined;\r\n};\r\nexport const maxLengthCreator       = max => value => {\r\n    if (value.length > max) return `Max length is ${max} symbols`;\r\n    return undefined;\r\n};\r\nexport const minLengthCreator       = min => value => {\r\n    if (value.length < min) return `Min length is ${min} symbols`;\r\n    return undefined;\r\n};\r\n\r\n\r\n\r\n\r\n//For Training\r\nexport const requireField = value => (value || typeof value === 'number' ? undefined : 'Required');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './LoginForm.module.css'\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport {required, minLengthCreator, email} from \"../../utils/validator/validator\";\r\nimport {Input} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet minLength5 = minLengthCreator(5);\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authPage.isAuth\r\n    }\r\n}\r\n\r\nclass LoginForm extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuth) return <Redirect to='/profile' />\r\n        else return <LoginFormComponent handleSubmit={this.props.handleSubmit} error={this.props.error} captchaUrl={this.props.captchaUrl}/>\r\n    }\r\n\r\n};\r\n\r\nconst LoginFormComponent = props => {\r\n    return(\r\n        <div className={`default-card ${s.loginForm}`}>\r\n            <form className=\"form\" onSubmit={props.handleSubmit}>\r\n                <Field name=\"email\" type=\"text\" placeholder=\"E-mail\" component={Input} validate={[required, email]}/>\r\n                <Field name=\"password\" type=\"password\" placeholder=\"Password\" component={Input} validate={[required, minLength5]}/>\r\n                <div className={s.rememberMe}>\r\n                    <label htmlFor=\"rememberMe\">Remember me</label>\r\n                    <Field name=\"rememberMe\" type=\"checkbox\" component={\"input\"} className={s.remember}/>\r\n                </div>\r\n                {props.captchaUrl && (\r\n                    <div>\r\n                        <div><img src={props.captchaUrl} alt=\"captcha\"/></div>\r\n                        <Field name=\"captcha\" type=\"text\" component={\"input\"}/>\r\n                    </div>\r\n                )}\r\n                <button className=\"main-btn\">Войти</button>\r\n                {props.error &&\r\n                    <div className={s.commonError}>\r\n                        {props.error}\r\n                    </div>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {}),\r\n    reduxForm({form: 'loginForm'})\r\n)(LoginForm)\r\n\r\n\r\n","import {authApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {setUserIdAC} from \"./profile-reducer\";\r\n\r\nconst TOGGLE_AUTH = 'samurai-network/auth-reducer/TOGGLE_AUTH';\r\nconst SET_USER_DATA = 'samurai-network/auth-reducer/SET_USER_DATA';\r\nconst TOGGLE_PRELOADER = 'samurai-network/auth-reducer/TOGGLE_PRELOADER';\r\nconst SET_DEFAULT_STATE = 'samurai-network/auth-reducer/SET_DEFAULT_STATE';\r\nconst SET_CAPTCHA_URL = 'samurai-network/auth-reducer/SET_CAPTCHA_URL';\r\n\r\nlet initialState = {\r\n    isAuth: false,\r\n    preloader: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_AUTH:\r\n            return {isAuth: action.bool}\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.stateFromApi\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state,\r\n                preloader: action.bool\r\n            }\r\n        case SET_DEFAULT_STATE:\r\n            return {\r\n                isAuth: false,\r\n                preloader: false\r\n            }\r\n        case SET_CAPTCHA_URL:\r\n            return {\r\n                ...state,\r\n                captchaUrl: action.url\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//ActionCreator\r\nconst toggleAuthState = (bool) => ({type: TOGGLE_AUTH, bool});\r\nconst togglePreloader = (bool) => ({type: TOGGLE_PRELOADER, bool});\r\nconst setUserData = (stateFromApi) => ({type: SET_USER_DATA, stateFromApi});\r\nconst setDefaultState = () => ({type: SET_DEFAULT_STATE});\r\nconst setCaptchaUrlAC = url => ({type: SET_CAPTCHA_URL, url});\r\n//Thunk\r\nexport const getAuthStateUser = () => async (dispatch) => {\r\n    let response = await authApi.getAuthState();\r\n\r\n    if (response.data.resultCode === 0) {\r\n\r\n        dispatch(setUserIdAC(response.data.data.id)); //Установить ID пользователя\r\n        dispatch(toggleAuthState(true)); //Сообщаю что пользователь авторизован в true\r\n        dispatch(setUserData(response.data.data)); //Устанавливаю данные пользователя с сервера\r\n    } else {\r\n        dispatch(toggleAuthState(false));\r\n    }\r\n};\r\n\r\nexport const sendCaptchaRequestThunkCallback = () => async dispatch => {\r\n    const response = await authApi.requestCaptcha();\r\n    const captchaURL = response.data.url;\r\n    dispatch(setCaptchaUrlAC(captchaURL))\r\n}\r\n\r\nexport const loginTheSiteThunkCallback = (formData) => async (dispatch) => {\r\n    const response = await authApi.loginTheSite(formData);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(toggleAuthState(true));\r\n        dispatch(getAuthStateUser());\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(sendCaptchaRequestThunkCallback());\r\n        }\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Unknown error';\r\n        dispatch(togglePreloader(false));\r\n        dispatch(stopSubmit('loginForm', {_error: message}))\r\n    }\r\n}\r\nexport const logoutTheSiteCallback = () => async (dispatch) => {\r\n    await authApi.logOutTheSite();\r\n    dispatch(setDefaultState())\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport LoginForm from \"../LoginForm/LoginForm\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTheSiteThunkCallback} from \"../../Redux/auth-reducer\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        preloader: state.authPage.preloader,\r\n        captchaUrl: state.authPage.captchaUrl\r\n    }\r\n};\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    onSubmit = (formData) => {\r\n        console.log(formData);\r\n        this.props.loginTheSiteThunkCallback(formData);\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        return(\r\n            <div>\r\n                {this.props.preloader && <Preloader/>}\r\n                {!this.props.preloader && <LoginForm onSubmit={this.onSubmit} {...this.props} captchaUrl={this.props.captchaUrl}/>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {loginTheSiteThunkCallback})\r\n)(Login);","import React from 'react';\r\nimport style from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return(\r\n        <header className={style.headerSection}>\r\n            <div className=\"container\">\r\n                <div className={style.links}>\r\n                    <a href=\"#\"><img src=\"https://vk.com/images/svg_icons/ic_head_logo.svg\" alt=\"\"/></a>\r\n                    {props.authPage.isAuth\r\n                        ? <div><a href=\"#\">{props.authPage.login}</a> <button onClick={props.logOut}>Logout</button></div>\r\n                        : <a href=\"#\">Login</a>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logoutTheSiteCallback} from \"../../Redux/auth-reducer\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({});\r\n\r\nclass HeaderContainer extends React.Component{\r\n    logOut = () => {\r\n        this.props.logoutTheSiteCallback()\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Header authPage={this.props.authPage} logOut={this.logOut}/>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutTheSiteCallback})\r\n)(HeaderContainer)\r\n\r\n\r\n","import React from \"react\";\r\n\r\nfunction Final() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Final;\r\n\r\n\r\n","import {getAuthStateUser} from \"./auth-reducer\";\r\n\r\nconst SET_INITIALIZE = 'SET_INITIALIZE';\r\n\r\nlet initialState = {\r\n    initialize: false,\r\n}\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZE:\r\n            return {\r\n                ...state,\r\n                initialize: action.bool\r\n            }\r\n        default:\r\n            return {...state}\r\n    }\r\n};\r\n\r\n\r\n//ActionCreator\r\nexport const setInitialize = bool => ({type: SET_INITIALIZE, bool});\r\n//Thunks\r\nexport const getInitializeStateThunkCallback = () => dispatch => {\r\n    let initializePromise = dispatch(getAuthStateUser());\r\n    Promise.all([initializePromise])\r\n        .then(() => {\r\n                dispatch(setInitialize(true))\r\n            }\r\n        )\r\n}\r\n\r\nexport default appReducer;\r\n","import React from \"react\";\r\n\r\nconst withSuspense = Component => {\r\n    return<React.Suspense fallback={<div>Идёт загрузка...</div>}>\r\n            <Component/>\r\n        </React.Suspense>\r\n}\r\n\r\nexport default withSuspense;","//Libraries\r\nimport React, {Suspense} from 'react';\r\nimport {Route} from \"react-router-dom\";\r\n\r\n//Styles\r\nimport './fonts/fontawesome/css/all.css';\r\nimport './App.css';\r\n\r\n//Components\r\nimport Aside from './component/Aside/Aside';\r\nimport Feed from \"./component/Feed/Feed\";\r\nimport Friend from \"./component/Friend/Friend\";\r\n\r\n\r\nimport Login from \"./component/Login/Login\";\r\nimport HeaderContainer from \"./component/Header/HeaderContainer\";\r\n\r\nimport TrainSection from \"./component/Training/Forms\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getInitializeStateThunkCallback} from \"./Redux/app-reducer\";\r\n\r\nimport Preloader from \"./common/Preloader/Preloader\";\r\nimport {getAuthPageSelector, getInitializeSelector} from \"./utils/selectors/selectors\";\r\nimport withSuspense from \"./hoc/withSuspense\";\r\n\r\nconst ContainerUsers = React.lazy(() => import('./component/Users/ContainerUsers'));\r\nconst ContainerProfile = React.lazy(() => import('./component/Profile/ContainerProfile'));\r\nconst ContainerDialogs = React.lazy(() => import(\"./component/Dialogs/ContainerDialogs\"));\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialize: getInitializeSelector(state),\r\n        authPage: getAuthPageSelector(state)\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getInitializeStateThunkCallback();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialize) return <Preloader/>\r\n        return (\r\n            <div className=\"App\">\r\n                <HeaderContainer authPage={this.props.authPage}/>\r\n                <div className=\"main container\">\r\n                    <Aside />\r\n                    <Route path='/profile/:userId?' render={() => withSuspense(ContainerProfile)}/>\r\n                    <Route path='/dialogs' render={() => withSuspense(ContainerDialogs)}/>\r\n                    <Route path='/feed' render={() => <Feed/>}/>\r\n                    <Route path='/friend' render={() => <Friend/>}/>\r\n                    <Route path='/users' render={() => withSuspense(ContainerUsers)}/>\r\n                    <Route path='/login' render={() => <Login/>}/>\r\n                    <Route path='/training' render={() => <TrainSection/>}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getInitializeStateThunkCallback}),\r\n)(App)\r\n\r\n","\r\nlet initialState = {\r\n    links: [\r\n        {url: '/profile', icon: 'fa-home', text: 'My Profile'},\r\n        {url: '/feed', icon: 'fa-align-left', text: 'News'},\r\n        {url: '/dialogs', icon: 'fa-comments', text: 'Messages'},\r\n        //{url: '/friend', icon: 'fa-user', text: 'Friends'},\r\n        {url: '/users', icon: 'fa-user', text: 'Users'},\r\n        {url: '/training', icon: 'fa-gamepad', text: 'Training'},\r\n        {url: '#', icon: 'fa-users', text: 'Communities!!!'},\r\n        {url: '#', icon: 'fa-music', text: 'Music!!!'},\r\n        {url: '#', icon: 'fa-film', text: 'Videos!!!'}\r\n    ],\r\n    friends: [\r\n        {userId: 1, name: 'Pavel Durov', src: 'https://rossaprimavera.ru/static/files/2c7ca8526ecb.jpg'},\r\n        {userId: 2, name: 'Geralt of Rivia', src: 'http://gamebomb.ru/files/galleries/001/2/23/330556.jpg'},\r\n        {\r\n            userId: 3,\r\n            name: 'Jennifer Connelly',\r\n            src: 'https://avatars.mds.yandex.net/get-pdb/1935444/7ad1efd1-cc5f-48fc-96ad-c65bab20970c/s1200'\r\n        },\r\n        {\r\n            userId: 4,\r\n            name: 'Harry Potter',\r\n            src: 'https://avatars.mds.yandex.net/get-zen_doc/236854/pub_5a316bb4830905958b6dbad4_5a316bda77d0e6afcba2ac2d/scale_1200'\r\n        },\r\n        {\r\n            userId: 5,\r\n            name: 'Jack Sheppard',\r\n            src: 'http://static2.kinootziv.com/source/files/wallpapers/matt/matthewfox67978.jpg'\r\n        }\r\n    ]\r\n};\r\n\r\nconst asideReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default asideReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport messageReducer from \"./messages-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport asideReducer from \"./aside-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from \"./auth-reducer\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: messageReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: asideReducer,\r\n    usersPage: usersReducer,\r\n    authPage: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(thunkMiddleware)\r\n));\r\n\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport './index.css';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport store from './Redux/redux-store';\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <HashRouter >\r\n            <App />\r\n        </HashRouter>\r\n    </Provider>\r\n    ,document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n","//AppState;\r\nimport {createSelector} from \"reselect\";\r\nexport const getInitializeSelector = state => state.app.initialize\r\n//AuthState\r\nexport const getAuthPageSelector = state => state.authPage;\r\n//ProfilePage\r\nexport const getProfilePageSelector = state => state.profilePage;\r\n//UsersPage\r\nexport const getUsersPageSelector = state => state.usersPage;\r\n//AsidePage\r\nexport const getSidebarLinks = state => state.sidebar.links;\r\nexport const getSidebarFriends = state => state.sidebar.friends;\r\nexport const getFilterSidebarLinks = createSelector([getSidebarLinks], (links) => {\r\n    return links.filter(l => true);\r\n});\r\n//DialogsPage\r\nexport const getDialogsPage = state => state.dialogsPage;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"remember\":\"LoginForm_remember__1vztJ\",\"rememberMe\":\"LoginForm_rememberMe__2QSVp\",\"commonError\":\"LoginForm_commonError__3yF1n\",\"someError\":\"LoginForm_someError__1c444\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__1bPy4\",\"error\":\"FormsControls_error__5MKwu\"};","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let mapStateToProps = (state) => {\r\n        return {\r\n            isAuth: state.authPage.isAuth\r\n        }\r\n    }\r\n\r\n    class RedirectComponent extends React.Component{\r\n        constructor(props) {\r\n            super();\r\n        }\r\n\r\n        render() {\r\n            if (this.props.isAuth) return <Component {...this.props}/>\r\n            else return <Redirect to={'/login'} />\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToProps, {})(RedirectComponent);\r\n}\r\n\r\n\r\n\r\n","import {profileApi} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_USER_POST = 'samurai-network/profile-reducer/ADD_USER_POST';\r\nconst SET_DISPLAYED_USER = 'samurai-network/profile-reducer/SET_DISPLAYED_USER';\r\nconst IS_MY_PAGE = 'samurai-network/profile-reducer/IS_MY_PAGE';\r\nconst SET_USER_STATUS = 'samurai-network/profile-reducer/SET_USER_STATUS';\r\nconst DELETE_POST = 'samurai-network/profile-reducer/DELETE_POST';\r\nconst SAVE_PHOTO = 'samurai-network/profile-reducer/SAVE_PHOTO';\r\nconst SET_USER_ID = 'samurai-network/profile-reducer/SET_USER_ID';\r\nconst SET_PROFILE_FORM_RESULT = 'samurai-network/profile-reducer/SET_PROFILE_FORM_RESULT';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {message: \"My first post! Hello, world!\", likeCount: 7},\r\n        {message: \"You don`t know me, but believe me\", likeCount: 25},\r\n        {\r\n            message: \"В частности, сплочённость команды профессионалов представляет собой интересный эксперимент проверки существующих финансовых и административных условий.\",\r\n            likeCount: 42\r\n        }\r\n    ],\r\n    currentUser: { //Текущий отображаемый пользователь\r\n        aboutMe: null,\r\n        contacts: {facebook: null, website: null, vk: null, twitter: null, instagram: null},\r\n        lookingForAJob: false,\r\n        lookingForAJobDescription: null,\r\n        fullName: '',\r\n        userId: 0,\r\n        photos: {\r\n            small: null,\r\n            large: null\r\n        }\r\n    },\r\n    myId: null,\r\n    isMyPage: true,\r\n    status: '',\r\n    hasProfileFormError: false\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER_POST:\r\n            return {\r\n                ...state,\r\n                posts: [{message: action.textNewPost, likeCount: 0}, ...state.posts]\r\n            }\r\n        case SAVE_PHOTO:\r\n            return {\r\n                ...state,\r\n                currentUser: {\r\n                    ...state.currentUser,\r\n                    photos: {\r\n                        small: action.photos.small,\r\n                        large: action.photos.large\r\n                    }\r\n                }\r\n            }\r\n        case SET_DISPLAYED_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: {...action.userDataFromApi}\r\n            }\r\n        case IS_MY_PAGE:\r\n            return {\r\n                ...state,\r\n                isMyPage: state.myId === +action.userId\r\n            }\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((post, index) => index != action.postId)\r\n            }\r\n        case SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                myId: action.userId\r\n            }\r\n        case SET_PROFILE_FORM_RESULT:\r\n            return {\r\n                ...state,\r\n                hasProfileFormError: action.bool\r\n            }\r\n        default:\r\n            return {...state};\r\n    }\r\n};\r\n\r\n\r\n//ActionCreator\r\nexport const addNewPostCreateAction = (textNewPost) => ({type: ADD_USER_POST, textNewPost});\r\nexport const setUserIdAC = userId => ({type: SET_USER_ID, userId});\r\nconst setDisplayedCurrentUser = (userDataFromApi) => ({type: SET_DISPLAYED_USER, userDataFromApi});\r\nconst isMyPageAC = (userId) => ({type: IS_MY_PAGE, userId});\r\nconst setUserStatus = (status) => ({type: SET_USER_STATUS, status});\r\nexport const deleteUserPost = (postId) => ({type: DELETE_POST, postId});\r\nexport const savePhotoActionCreator = (photos) => ({type: SAVE_PHOTO, photos});\r\nexport const setProfileEditFormResultToServer = (bool) => ({type: SET_PROFILE_FORM_RESULT, bool});\r\n\r\n//ThunkCallback\r\nexport const addNewPostThuhnkCallback = (textNewPost) => (dispatch) => {\r\n    dispatch(addNewPostCreateAction(textNewPost));\r\n}\r\nexport const getProfilePageThunkCallback = (userId = initialState.myId) => async (dispatch) => {\r\n\r\n    await dispatch(isMyPageAC(userId))\r\n    const response = await profileApi.getProfilePeople(userId);\r\n    dispatch(setDisplayedCurrentUser(response.data))\r\n\r\n}\r\nexport const getUserStatusThunkCallback = (userId) => async (dispatch) => {\r\n    const response = await profileApi.getUserStatus(userId);\r\n    dispatch(setUserStatus(response.data))\r\n};\r\nexport const savePhotoThunkCallback = photoFile => async dispatch => {\r\n    const response = await profileApi.savePhotoToServer(photoFile);\r\n    dispatch(savePhotoActionCreator(response.data.data.photos));\r\n};\r\nexport const updateUserStatusThunkCallback = statusText => async dispatch => {\r\n    const response = await profileApi.updateUserStatus(statusText)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setUserStatus(statusText));\r\n    }\r\n};\r\nexport const handleProfileEditFormThunkCallback = formData => async (dispatch, getState) => { //id для обновления страницы после редактирования\r\n    let id = getState().profilePage.myId;\r\n    let response = await profileApi.sendEditProfileSettings(formData);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getProfilePageThunkCallback(id));\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages : 'Unknown Error';\r\n        dispatch(stopSubmit('profile-edit', {_error: message}));\r\n        return Promise.reject(message);\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","import React from \"react\";\r\nimport defaultPreloader from '../../assets/image/preloader.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return(\r\n        <div>\r\n            <img src={defaultPreloader} alt=\"Preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listWrap\":\"ListsFriend_listWrap__34TZ6\",\"listImageWrap\":\"ListsFriend_listImageWrap__3P9Tn\",\"listHead\":\"ListsFriend_listHead__3bwee\"};","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\n\r\nexport const createElement = Component => ({input, meta, ...props}) => {\r\n    let hasError = meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl + ` ` + (hasError ? s.error : ``) }>\r\n            <div>\r\n                <Component {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = createElement('textarea');\r\nexport const Input = createElement('input');\r\n\r\n\r\n\r\n//For Training\r\nconst createFormElement = TagName => ({input, meta, ...props}) => {\r\n    let hasErrorNow = meta.touched && meta.error;\r\n    return(\r\n        <div className={s.formControl + ` ` + (hasErrorNow ? s.error : ``) }>\r\n            <TagName {...input} {...props}/>\r\n            {hasErrorNow && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport const customInput = createFormElement('input');\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemLink\":\"AsideLinks_itemLink__1s7ym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"asideSection\":\"Aside_asideSection__MTiJo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerSection\":\"Header_headerSection__2QV5P\",\"links\":\"Header_links__3EjUY\"};","import React from 'react';\r\nimport style from './SmallAvatar.module.css';\r\n\r\nfunction SmallAvatar(props) {\r\n    return (\r\n        <div className={style.user__avatar}>\r\n            <img src={props.src} alt=\"avatar\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SmallAvatar;","const UPDATE_MESSAGE_TEXTAREA   = 'samurai-network/messages-reducer/UPDATE-MESSAGE-TEXTAREA';\r\nconst ADD_NEW_MESSAGE           = 'samurai-network/messages-reducer/ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    friends: [\r\n        {userId: 1, name: 'Pavel Durov', src: 'https://rossaprimavera.ru/static/files/2c7ca8526ecb.jpg'},\r\n        {userId: 2, name: 'Geralt of Rivia', src: 'http://gamebomb.ru/files/galleries/001/2/23/330556.jpg'},\r\n        {userId: 3, name: 'Jennifer Connelly', src: 'https://avatars.mds.yandex.net/get-pdb/1935444/7ad1efd1-cc5f-48fc-96ad-c65bab20970c/s1200'},\r\n        {userId: 4, name: 'Harry Potter', src: 'https://avatars.mds.yandex.net/get-zen_doc/236854/pub_5a316bb4830905958b6dbad4_5a316bda77d0e6afcba2ac2d/scale_1200'},\r\n        {userId: 5, name: 'Jack Sheppard', src: 'http://static2.kinootziv.com/source/files/wallpapers/matt/matthewfox67978.jpg'}\r\n    ],\r\n    chatTextarea: '',\r\n    failCount: 0\r\n};\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case UPDATE_MESSAGE_TEXTAREA:\r\n            return {\r\n                ...state,\r\n                chatTextarea: action.newValue\r\n            }\r\n        case ADD_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                chatTextarea: ''\r\n            }\r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n};\r\n\r\nexport const updateMessageTextareaCreateAction = (text) => ({type: UPDATE_MESSAGE_TEXTAREA, newValue: text});\r\nexport const addNewMessageCreateAction = () => ({type: ADD_NEW_MESSAGE});\r\n\r\nexport default messageReducer;"],"sourceRoot":""}